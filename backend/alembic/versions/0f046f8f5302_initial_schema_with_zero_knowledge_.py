# ============================================
# FILE 5: backend/alembic/script.py.mako
# ============================================

"""Initial schema with zero-knowledge architecture

Revision ID: 0f046f8f5302
Revises: 
Create Date: 2025-10-29 13:35:04.600843

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0f046f8f5302'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blocked_keywords',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('keyword', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('language', sa.String(length=5), nullable=True),
    sa.Column('is_exact_match', sa.Boolean(), nullable=True),
    sa.Column('is_case_sensitive', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_keyword_category', 'blocked_keywords', ['category', 'is_active'], unique=False)
    op.create_index('idx_keyword_language', 'blocked_keywords', ['language', 'is_active'], unique=False)
    op.create_table('schema_version',
    sa.Column('version', sa.String(length=10), nullable=False),
    sa.Column('applied_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('version')
    )
    op.create_table('sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_token', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_agent_hash', sa.String(length=64), nullable=True),
    sa.Column('language_preference', sa.String(length=5), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_crisis_mode', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_expires_at'), 'sessions', ['expires_at'], unique=False)
    op.create_index(op.f('ix_sessions_last_activity'), 'sessions', ['last_activity'], unique=False)
    op.create_index(op.f('ix_sessions_session_token'), 'sessions', ['session_token'], unique=True)
    op.create_table('system_health_metrics',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('metric_value', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('metric_unit', sa.String(length=20), nullable=True),
    sa.Column('service_name', sa.String(length=50), nullable=True),
    sa.Column('environment', sa.String(length=20), nullable=True),
    sa.Column('recorded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_metric_name_time', 'system_health_metrics', ['metric_name', 'recorded_at'], unique=False)
    op.create_index('idx_service_time', 'system_health_metrics', ['service_name', 'recorded_at'], unique=False)
    op.create_table('training_data',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('source_id', sa.String(length=100), nullable=True),
    sa.Column('content_encrypted', sa.Text(), nullable=False),
    sa.Column('encryption_iv', sa.String(length=32), nullable=False),
    sa.Column('sentiment', sa.String(length=20), nullable=True),
    sa.Column('emotion_tags', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('crisis_level', sa.String(length=20), nullable=True),
    sa.Column('age_group', sa.String(length=20), nullable=True),
    sa.Column('school_type', sa.String(length=20), nullable=True),
    sa.Column('location', sa.String(length=50), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verified_by', sa.String(length=50), nullable=True),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_crisis_level', 'training_data', ['crisis_level', 'is_active'], unique=False)
    op.create_index('idx_source_verified', 'training_data', ['source', 'is_verified'], unique=False)
    op.create_table('conversation_context',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('context_data_encrypted', sa.Text(), nullable=False),
    sa.Column('encryption_iv', sa.String(length=32), nullable=False),
    sa.Column('message_count', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_table('feedback',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('feedback_text_encrypted', sa.Text(), nullable=True),
    sa.Column('encryption_iv', sa.String(length=32), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_table('messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('content_encrypted', sa.Text(), nullable=False),
    sa.Column('encryption_iv', sa.String(length=32), nullable=False),
    sa.Column('role', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('model_used', sa.String(length=50), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('sentiment_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('emotion_tags', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('is_crisis_detected', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("role IN ('user', 'assistant')", name='check_role'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_session_messages', 'messages', ['session_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_messages_expires_at'), 'messages', ['expires_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_expires_at'), table_name='messages')
    op.drop_index('idx_session_messages', table_name='messages')
    op.drop_table('messages')
    op.drop_table('feedback')
    op.drop_table('conversation_context')
    op.drop_index('idx_source_verified', table_name='training_data')
    op.drop_index('idx_crisis_level', table_name='training_data')
    op.drop_table('training_data')
    op.drop_index('idx_service_time', table_name='system_health_metrics')
    op.drop_index('idx_metric_name_time', table_name='system_health_metrics')
    op.drop_table('system_health_metrics')
    op.drop_index(op.f('ix_sessions_session_token'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_last_activity'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_expires_at'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_table('schema_version')
    op.drop_index('idx_keyword_language', table_name='blocked_keywords')
    op.drop_index('idx_keyword_category', table_name='blocked_keywords')
    op.drop_table('blocked_keywords')
    # ### end Alembic commands ###